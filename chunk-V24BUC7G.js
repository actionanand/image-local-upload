import{$ as u,c,f as l,g,j as d}from"./chunk-JFZKIFJG.js";var h={production:!0,MAX_FILE_SIZE_MB:5};var I=class o{images=[];imagesSubject=new l([]);images$=this.imagesSubject.asObservable();toastService=d(u);storageErrorState=!1;constructor(){this.loadImages()}loadImages(){try{let e=localStorage.getItem("uploadedImages");e&&(this.images=JSON.parse(e),this.imagesSubject.next([...this.images])),this.storageErrorState=!1}catch(e){console.error("Failed to load images from storage",e),this.toastService.error("Failed to load saved images"),this.images=[],this.imagesSubject.next([])}}saveImages(){try{return localStorage.setItem("uploadedImages",JSON.stringify(this.images)),this.imagesSubject.next([...this.images]),!0}catch(e){return console.error("Failed to save images to storage",e),e instanceof DOMException&&e.name==="QuotaExceededError"?this.toastService.error("Storage limit reached. Please delete some images first."):this.toastService.error("Failed to save images."),!1}}isFileTooLarge(e){let a=(h.MAX_FILE_SIZE_MB||5)*1024*1024;return e.size>a}uploadImage(e){return new Promise(t=>{try{if(e.file&&this.isFileTooLarge(e.file)){this.toastService.error("File is too large. Maximum size is 5 MB."),t(null);return}let a={id:Date.now().toString(),name:e.file.name,base64:e.base64,type:e.file.type,date:new Date,originalSize:e.originalSize,reducedSize:e.reducedSize,quality:e.quality,compressionRatio:e.compressionRatio},r=[...this.images,a],i=JSON.stringify(r),s=new Blob([i]).size,m=4*1024*1024;if(s>m){console.warn("Image too large for storage",s),this.toastService.error("Image is too large for storage. Try a smaller image or different format."),t(null);return}this.images.push(a);try{localStorage.setItem("uploadedImages",JSON.stringify(this.images)),this.imagesSubject.next([...this.images]),t(a)}catch(n){console.error("Failed to save images to storage",n),this.images.pop(),this.imagesSubject.next([...this.images]),n instanceof DOMException&&n.name==="QuotaExceededError"?this.toastService.error("Storage limit reached. Please delete some images first."):this.toastService.error("Failed to save image."),t(null)}}catch(a){console.error("Error in uploadImage:",a),this.toastService.error("Failed to process image upload."),t(null)}})}getImages(){return[...this.images]}getImageById(e){return this.images.find(t=>t.id===e)}deleteImage(e){this.images=this.images.filter(t=>t.id!==e),this.saveImages()}addConvertedImage(e){if(this.storageErrorState)return this.toastService.error("Cannot save image - storage limit reached. Please delete some images and refresh the page."),!1;try{let t=[...this.images,e],a=JSON.stringify(t),r=new Blob([a]).size,i=4*1024*1024;if(r>i)return this.toastService.error("Image is too large for storage. Try a different format or smaller image."),!1;this.images.push(e);let s=this.saveImages();return s||this.images.pop(),s}catch(t){return console.error("Error checking or saving image:",t),this.toastService.error("Failed to save converted image"),!1}}clearStorageErrorState(){this.storageErrorState=!1}static \u0275fac=function(t){return new(t||o)};static \u0275prov=g({token:o,factory:o.\u0275fac,providedIn:"root"})};var f=class o{reduceImageQuality(e,t){return c(this,null,function*(){if(t==="original"){let n=yield this.fileToBase64(e);return{blob:e,base64:n,originalSize:e.size,reducedSize:e.size,quality:t,compressionRatio:1}}let a=this.getQualityLevel(t),r=yield this.createImageFromFile(e),{blob:i,base64:s}=yield this.compressImage(r,a),m=i.size/e.size;return{blob:i,base64:s,originalSize:e.size,reducedSize:i.size,quality:t,compressionRatio:m}})}getQualityLevel(e){switch(e){case"optimized":return .85;case"medium":return .6;case"low":return .3;default:return .9}}createImageFromFile(e){return new Promise((t,a)=>{let r=new Image;r.onload=()=>t(r),r.onerror=a,r.src=URL.createObjectURL(e)})}compressImage(e,t){return c(this,null,function*(){let a=document.createElement("canvas"),r=a.getContext("2d");if(!r)throw new Error("Could not get canvas context");a.width=e.width,a.height=e.height,r.drawImage(e,0,0,e.width,e.height);let i=yield new Promise(m=>{a.toBlob(n=>{m(n)},"image/jpeg",t)}),s=yield this.blobToBase64(i);return{blob:i,base64:s}})}fileToBase64(e){return new Promise((t,a)=>{let r=new FileReader;r.onload=()=>t(r.result),r.onerror=a,r.readAsDataURL(e)})}blobToBase64(e){return new Promise((t,a)=>{let r=new FileReader;r.onload=()=>t(r.result),r.onerror=a,r.readAsDataURL(e)})}formatFileSize(e){if(e===0)return"0 Bytes";let t=1024,a=["Bytes","KB","MB","GB"],r=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,r)).toFixed(2))+" "+a[r]}static \u0275fac=function(t){return new(t||o)};static \u0275prov=g({token:o,factory:o.\u0275fac,providedIn:"root"})};export{h as a,I as b,f as c};
